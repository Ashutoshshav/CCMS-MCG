@model CCMS.CustomModel.DataModel

@* <div class="mt-16 flex w-full flex-col items-center justify-center md:mt-12 lg:mt-20">
	<!-- Location Header -->
	<div class="w-full">
		<div class="mt-2 flex w-full flex-col items-center justify-between bg-blue-100 px-4 py-3 shadow-md sm:flex-row lg:mt-0">
			<div class="flex items-center space-x-4">
				<div class="flex" id="statusImg">
				</div>
				<p class="text-lg font-semibold text-gray-800">@Model.IMEI_Master_s.Location</p>
			</div>
			<div class="mt-2 text-center sm:mt-0">
				<p class="text-lg font-normal text-gray-800">
					Last Update: <span class="font-semibold text-gray-900">@Model.visLive_s.DTIME_SYS</span>
				</p>
			</div>
		</div>

		<!-- Information Section -->
		<div class="my-4 grid gap-4 px-4 md:grid-cols-2 lg:grid-cols-3">
			<div class="flex rounded-lg border bg-white p-3 shadow-sm">
				<p style="width:40%;" class="text-lg text-gray-700">Zone:</p>
				<p style="width:60%;" class="text-xl font-semibold text-gray-900">@Model.IMEI_Master_s.Zone</p>
			</div>
			<div class="flex rounded-lg border bg-white p-3 shadow-sm">
				<p style="width:40%;" class="text-lg text-gray-700">Ward:</p>
				<p style="width:60%;" class="text-xl font-semibold text-gray-900">@Model.IMEI_Master_s.Ward</p>
			</div>
			<div class="flex rounded-lg border bg-white p-3 shadow-sm">
				<p style="width:40%;" class="text-lg text-gray-700">LAT LONG:</p>
				<p style="width:60%;" class="text-xl font-semibold text-gray-900">@Model.IMEI_Master_s.Latitude <span style="margin-left:20px;"></span> @Model.IMEI_Master_s.Longitude</p>
			</div>
			<div class="flex rounded-lg border bg-white p-3 shadow-sm">
				<p style="width:40%;" class="text-lg text-gray-700">SIM NO:</p>
				<p style="width:60%;" class="text-xl font-semibold text-gray-900">@Model.IMEI_Master_s.SIM_No</p>
			</div>
			<div class="flex rounded-lg border bg-white p-3 shadow-sm">
				<p style="width:40%;" class="text-lg text-gray-700">IMEI NO:</p>
				<p style="width:60%;" class="text-xl font-semibold text-gray-900">@Model.IMEI_Master_s.IMEI_no</p>
			</div>
			<div class="flex rounded-lg border bg-white p-3 shadow-sm">
				<p style="width:40%;" class="text-lg text-gray-700">PHASE:</p>
				<p style="width:60%;" class="text-xl font-semibold text-gray-900">1</p>
			</div>
		</div>
	</div>

	<!-- Live Status -->
	<div class="w-full">
		<div class="flex w-full flex-col items-center justify-between bg-blue-100 px-4 py-3 shadow-md sm:flex-row">
			<div class="flex items-center space-x-4">
				<p class="text-lg font-semibold text-gray-800">Live Status</p>
			</div>
		</div>
		<div class="my-4 grid gap-4 px-4 md:grid-cols-2 lg:grid-cols-3">
			<div class="flex rounded-lg border bg-white p-3 shadow-sm">
				<p style="width:40%;" class="text-lg text-gray-700">Voltage:</p>
				<p style="width:60%;" class="text-xl font-semibold text-gray-900">@(Model.visLive_s.P1 ?? 0) <span class="text-lg text-gray-500">v</span></p>
			</div>
			<div class="flex rounded-lg border bg-white p-3 shadow-sm">
				<p style="width:40%;" class="text-lg text-gray-700">Current: </p>
				<p style="width:60%;" class="text-xl font-semibold text-gray-900">@(Model.visLive_s.P2 ?? 0) <span class="text-sm text-gray-500">A</span></p>
			</div>
			<div class="flex rounded-lg border bg-white p-3 shadow-sm">
				<p style="width:40%;" class="text-lg text-gray-700">Power: </p>
				<p style="width:60%;" class="text-xl font-semibold text-gray-900">@(Model.visLive_s.P3 ?? 0) <span class="text-xs text-gray-500">KW</span></p>
			</div>
			<div class="flex rounded-lg border bg-white p-3 shadow-sm">
				<p style="width:40%;" class="text-lg text-gray-700">Units: </p>
				<p style="width:60%;" class="text-xl font-semibold text-gray-900">@(Model.visLive_s.P7 ?? 0) <span class="text-xs text-gray-500">KWH</span></p>
			</div>
			<div class="flex rounded-lg border bg-white p-3 shadow-sm">
				<p style="width:40%;" class="text-lg text-gray-700">Mode: </p>
				<div style="width:60%;" class="text-xl font-semibold text-gray-900">
					@(Model.visLive_s.P11 == 1 ? "MANUAL" : "AUTO")
				</div>
			</div>
			<div class="flex rounded-lg border bg-white p-3 shadow-sm">
				<p style="width:40%;" class="text-lg text-gray-700">Door Status: </p>
				<div style="width:60%;" class="text-xl font-semibold text-gray-900">
					@(Model.visLive_s.P12 == 1 ? "OPEN" : "CLOSE")
				</div>
			</div>
			<div class="flex rounded-lg border bg-white p-3 shadow-sm">
				<p style="width:40%;" class="text-lg text-gray-700">Meter Status: </p>
				<p style="width:60%;" class="text-xl font-semibold text-gray-900">
					@if (Model.visLive_s.P20 == 0)
					{
						<span class=''>Communicating</span>
					}
					else
					{
						<span class=''>Not Communicating</span>
					}
				</p>
			</div>
			<div class="flex rounded-lg border bg-white p-3 shadow-sm">
				<p style="width:40%;" class="text-lg text-gray-700">Relay Status: </p>
					@if(Model.visLive_s.P10 == 1) 
					{
						<p style="width:60%;" class="text-xl font-semibold text-gray-900">ON</p>
					}
					else
					{
					<p style="width:60%;" class="text-xl font-semibold text-gray-900">OFF</p>
					}
			</div>
			<div class="flex rounded-lg border bg-white p-3 shadow-sm">
				<p style="width:40%;" class="text-lg text-gray-700">Date Time: </p>
				<p style="width:60%;" class="text-xl font-semibold text-gray-900">@Model.visLive_s.DTIME_SYS</p>
			</div>
			<div class="flex rounded-lg border bg-white p-3 shadow-sm">
				<p style="width:40%;" class="text-lg text-gray-700">On Time: </p>
				<p style="width:60%;" class="text-xl font-semibold text-gray-900">@Model.visLive_s.DTIME_SYS</p>
			</div>
			<div class="flex rounded-lg border bg-white p-3 shadow-sm">
				<p style="width:40%;" class="text-lg text-gray-700">Error Status: </p>
				<p style="width:60%;" class="text-xl font-semibold text-gray-900">@Model.visLive_s.P16</p>
			</div>
		</div>
	</div>

	<!-- Control Section -->
	<div class="w-full">
		<div class="flex w-full flex-col items-center justify-between bg-blue-100 px-4 py-3 shadow-md sm:flex-row">
			<div class="flex items-center space-x-4">
				<p class="text-lg font-semibold text-gray-800">Control</p>
			</div>
		</div>
		<div class="my-4 grid w-full items-center justify-center gap-4 px-4 sm:grid-cols-2 lg:flex lg:justify-center lg:space-x-6">
			<button class="border-2 w-full max-w-xs rounded-full border-purple-200 px-36 py-2 text-black shadow-sm hover:shadow-lg hover:bg-purple-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-purple-300" onclick="updateStatus('9991', '@Model.visLive_s.IMEI_no')" id="btn-on">
				ON
			</button>
			<button class="border-2 w-full max-w-xs rounded-full border-purple-200 px-6 py-2 text-black shadow-sm hover:shadow-lg hover:bg-purple-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-purple-300" onclick="updateStatus('9992', '@Model.visLive_s.IMEI_no')" id="btn-off">
				OFF
			</button>
			<button class="border-2 w-full max-w-xs rounded-full border-purple-200 px-6 py-2 text-black shadow-sm hover:shadow-lg hover:bg-purple-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-purple-300" onclick="updateStatus('9993', '@Model.visLive_s.IMEI_no')" id="btn-reset">
				RESET
			</button>
			<button class="border-2 w-full max-w-xs rounded-full border-purple-200 px-6 py-2 text-black shadow-sm hover:shadow-lg hover:bg-purple-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-purple-300">
				UPDATE
			</button>
		</div>
	</div>

	<!-- Report Section -->
	<div class="w-full">
		<div class="flex w-full flex-col items-center justify-between bg-blue-100 px-4 py-3 shadow-md sm:flex-row">
			<div class="flex items-center space-x-4">
				<p class="text-lg font-semibold text-gray-800">Report</p>
			</div>
		</div>
		<div class="my-4 grid w-full items-center justify-center gap-4 px-4 sm:grid-cols-2 lg:flex lg:justify-center lg:space-x-6">
			<button class="border-2 w-full max-w-xs rounded-full border-purple-200 px-28 py-2 text-black shadow-sm hover:shadow-lg hover:bg-purple-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-purple-300">
				Live Report
			</button>
			<button class="border-2 w-full max-w-xs rounded-full border-purple-200 px-6 py-2 text-black shadow-sm hover:shadow-lg hover:bg-purple-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-purple-300">
				Daily Report
			</button>
			<button class="border-2 w-full max-w-xs rounded-full border-purple-200 px-6 py-2 text-black shadow-sm hover:shadow-lg hover:bg-purple-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-purple-300">
				Print/Excel/PDF
			</button>
		</div>
	</div>
</div> *@
<style>
	.popup {
		display: none;
	}

		.popup.show {
			display: block;
		}

	.animate-shake {
		animation: shake 0.5s ease-in-out;
	}
</style>
@{
	var multiplePhase = false;
}
<div class="mt-14 flex min-h-screen items-center justify-center bg-gray-100 text-gray-800 md:mt-12 lg:mt-16">
	<div class="mx-auto w-full max-w-md rounded-lg border border-blue-300 bg-white p-6 shadow-lg md:max-w-lg lg:max-w-2xl">
		<!-- Header Section -->
		<div class="flex items-center justify-between border-b pb-4">
			<div class="flex">
				<div class="flex" id="statusImg"></div>
				<h1 class="truncate text-xl font-bold text-blue-600">@Model.IMEI_Master_s.UID</h1>
			</div>
			<div class="flex items-center space-x-2">
				<button class="text-gray-500 hover:text-blue-600" onclick="reloadPage()">
					<i class="fas fa-sync-alt text-lg"></i>
				</button>
			</div>
		</div>

		<!-- Buttons Section -->
		<div class="grid-cols-2 mt-4 grid gap-4 sm:grid-cols-4">
			<button class="rounded bg-blue-500 py-2 text-sm font-semibold text-white shadow-md hover:bg-blue-600" onclick="getLiveReport(`@Model.IMEI_Master_s.UID`)">
				LIVE REPORT
			</button>
			<button class="rounded bg-blue-500 py-2 text-sm font-semibold text-white shadow-md hover:bg-blue-600" onclick="getDayReport(`@Model.IMEI_Master_s.UID`)">
				DAY REPORT
			</button>
			<button class="rounded bg-blue-500 py-2 text-sm font-semibold text-white shadow-md hover:bg-blue-600">
				UPDATE LIVE
			</button>
			<button class="hidden rounded bg-red-500 py-2 text-sm font-semibold text-white shadow-md hover:bg-red-600"
					onclick="updateStatus('9993', '@Model.visLive_s.IMEI_no')" id="btn-reset">
				MCB RESET
			</button>
		</div>

		<!-- Toggle Buttons -->
		<div class="mt-4 flex items-center space-x-4">
			<button class="hidden w-1/2 items-center justify-center space-x-2 rounded bg-green-500 px-4 py-3 text-sm font-semibold text-white shadow-md hover:bg-green-600"
					onclick="updateStatus('9991', '@Model.visLive_s.IMEI_no')" id="btn-on">
				<i class="fas fa-lightbulb text-lg"></i>
				<span>ON</span>
			</button>
			<button class="hidden w-1/2 items-center justify-center space-x-2 rounded bg-gray-500 px-4 py-3 text-sm font-semibold text-white shadow-md hover:bg-gray-600"
					onclick="updateStatus('9992', '@Model.visLive_s.IMEI_no')" id="btn-off">
				<i class="fa-regular fa-lightbulb text-lg"></i>
				<span>OFF</span>
			</button>
		</div>

		<!-- Details Section -->
		<div class="mt-4 space-y-1">
			<div class="flex">
				<strong class="w-1/3 text-sm text-gray-600">ZONE:</strong>
				<p class="w-2/3 text-lg font-bold text-gray-800">@Model.IMEI_Master_s.Zone</p>
			</div>
			<div class="flex">
				<strong class="w-1/3 text-sm text-gray-600">WARD NO:</strong>
				<p class="w-2/3 text-lg font-bold text-gray-800">@Model.IMEI_Master_s.Ward</p>
			</div>
			<div class="flex">
				<strong class="w-1/3 text-sm text-gray-600">LOCATION:</strong>
				<p class="w-2/3 text-lg font-bold text-gray-800">@Model.IMEI_Master_s.Location</p>
			</div>
			<div class="flex">
				<strong class="w-1/3 text-sm text-gray-600">SIM NO:</strong>
				<p class="w-2/3 text-lg font-bold text-gray-800">@Model.IMEI_Master_s.SIM_No</p>
			</div>
			<div class="flex">
				<strong class="w-1/3 text-sm text-gray-600">IMEI NO:</strong>
				<p class="w-2/3 text-lg font-bold text-gray-800">@Model.IMEI_Master_s.IMEI_no</p>
			</div>
			<div class="flex">
				<strong class="w-1/3 text-sm text-gray-600">PHASE:</strong>
				<p class="w-2/3 text-lg font-bold text-gray-800">@Model.IMEI_Master_s.Phase</p>
			</div>
			<div class="flex">
				<strong class="w-1/3 text-sm text-gray-600">LAT LONG:</strong>
				<p class="w-2/3 text-lg font-bold text-gray-800" id="lat-long">@Model.IMEI_Master_s.Latitude, @Model.IMEI_Master_s.Longitude</p>
			</div>
		</div>

		<!-- Last Live Updates -->
		<div class="pt-2">
			<h2 class="bg-gray-700 text-center text-lg font-bold text-white">LAST LIVE UPDATES</h2>
			<div class="mt-4 space-y-1 text-sm sm:text-base">
				<div class="flex justify-between">
					<span class="w-1/2 font-semibold text-gray-600">TIME:</span>
					<span class="w-1/2 text-lg font-bold text-gray-800">@(Model.visLive_s.DTIME_SYS?.ToString("dd MMM yyyy HH:mm") ?? "N/A")</span>
				</div>
				@if (@Model.IMEI_Master_s.Phase == 1)
				{
					<div class="flex justify-between">
						<span class="w-1/2 font-semibold text-gray-600">VOLTAGE:</span>
						<span class="w-1/2 text-lg font-bold text-gray-800">@(Model.visLive_s.P1 ?? 0) <span class="text-sm text-gray-500">v</span></span>
					</div>
					<div class="flex justify-between">
						<span class="w-1/2 font-semibold text-gray-600">CURRENT:</span>
						<span class="w-1/2 text-lg font-bold text-gray-800">@(Model.visLive_s.P2 ?? 0) <span class="text-xs text-gray-500">A</span></span>
					</div>
					<div class="flex justify-between">
						<span class="w-1/2 font-semibold text-gray-600">POWER:</span>
						<span class="w-1/2 text-lg font-bold text-gray-800">@(Model.visLive_s.P3 ?? 0) <span class="text-xs text-gray-500">KW</span></span>
					</div>
					<div class="flex justify-between">
						<span class="w-1/2 font-semibold text-gray-600">UNITS:</span>
						<span class="w-1/2 text-lg font-bold text-gray-800">@(Model.visLive_s.P7 ?? 0) <span class="text-xs text-gray-500">KWH</span></span>
					</div>
				}
				else if (@Model.IMEI_Master_s.Phase == 3)
				{
					<div class="flex justify-between">
						<span class="w-1/2 font-semibold text-gray-600">R-VOLT:</span>
						<span class="w-1/2 text-lg font-bold text-gray-800">@(Model.visLive_s.P1 ?? 0) <span class="text-sm text-gray-500">v</span></span>
					</div>
					<div class="flex justify-between">
						<span class="w-1/2 font-semibold text-gray-600">Y-VOLT:</span>
						<span class="w-1/2 text-lg font-bold text-gray-800">@(Model.visLive_s.P4 ?? 0) <span class="text-sm text-gray-500">v</span></span>
					</div>
					<div class="flex justify-between">
						<span class="w-1/2 font-semibold text-gray-600">B-VOLT:</span>
						<span class="w-1/2 text-lg font-bold text-gray-800">@(Model.visLive_s.P6 ?? 0) <span class="text-sm text-gray-500">v</span></span>
					</div>
					<div class="flex justify-between">
						<span class="w-1/2 font-semibold text-gray-600">R-CUR:</span>
						<span class="w-1/2 text-lg font-bold text-gray-800">@(Model.visLive_s.P2 ?? 0) <span class="text-xs text-gray-500">A</span></span>
					</div>
					<div class="flex justify-between">
						<span class="w-1/2 font-semibold text-gray-600">Y-CUR:</span>
						<span class="w-1/2 text-lg font-bold text-gray-800">@(Model.visLive_s.P8 ?? 0) <span class="text-xs text-gray-500">A</span></span>
					</div>
					<div class="flex justify-between">
						<span class="w-1/2 font-semibold text-gray-600">B-CUR:</span>
						<span class="w-1/2 text-lg font-bold text-gray-800">@(Model.visLive_s.P9 ?? 0) <span class="text-xs text-gray-500">A</span></span>
					</div>
					<div class="flex justify-between">
						<span class="w-1/2 font-semibold text-gray-600">R-POWER:</span>
						<span class="w-1/2 text-lg font-bold text-gray-800">@(Model.visLive_s.P3 ?? 0) <span class="text-xs text-gray-500">KW</span></span>
					</div>
					<div class="flex justify-between">
						<span class="w-1/2 font-semibold text-gray-600">Y-POWER:</span>
						<span class="w-1/2 text-lg font-bold text-gray-800">@(Model.visLive_s.P13 ?? 0) <span class="text-xs text-gray-500">KW</span></span>
					</div>
					<div class="flex justify-between">
						<span class="w-1/2 font-semibold text-gray-600">B-POWER:</span>
						<span class="w-1/2 text-lg font-bold text-gray-800">@(Model.visLive_s.P14 ?? 0) <span class="text-xs text-gray-500">KW</span></span>
					</div>
					<div class="flex justify-between">
						<span class="w-1/2 font-semibold text-gray-600">R-PF:</span>
						<span class="w-1/2 text-lg font-bold text-gray-800">@(Model.visLive_s.P17 ?? 0)</span>
					</div>
					<div class="flex justify-between">
						<span class="w-1/2 font-semibold text-gray-600">Y-PF:</span>
						<span class="w-1/2 text-lg font-bold text-gray-800">@(Model.visLive_s.P18 ?? 0)</span>
					</div>
					<div class="flex justify-between">
						<span class="w-1/2 font-semibold text-gray-600">B-PF:</span>
						<span class="w-1/2 text-lg font-bold text-gray-800">@(Model.visLive_s.P19 ?? 0)</span>
					</div>
					<div class="flex justify-between">
						<span class="w-1/2 font-semibold text-gray-600">TOTAL UNITS:</span>
						<span class="w-1/2 text-lg font-bold text-gray-800">@(Model.visLive_s.P7 ?? 0) <span class="text-xs text-gray-500">KWH</span></span>
					</div>
				}
				<div class="flex justify-between">
					<span class="w-1/2 font-semibold text-gray-600">PERCENTAGE LOAD:</span>
					<span class="w-1/2 text-lg font-bold text-gray-800">
						@((Model.visLive_s.P3 / Model.IMEI_Master_s.FullLoad * 100 ?? 0).ToString("F2"))
						<span class="text-sm text-gray-500">%</span>
					</span>
				</div>
				<div class="flex justify-between">
					<span class="w-1/2 font-semibold text-gray-600">MODE:</span>
					<span class="w-1/2 text-lg font-bold text-gray-800">@(Model.visLive_s.P11 == 1 ? "BYPASS" : "AUTO")</span>
				</div>
				<div class="flex justify-between">
					<span class="w-1/2 font-semibold text-gray-600">METER STATUS:</span>
					<span class="w-1/2 text-lg font-bold text-gray-800">@(Model.visLive_s.P20 == 0 ? "Communicating" : "Not Communicating")</span>
				</div>
				<div class="flex justify-between">
					<span class="w-1/2 font-semibold text-gray-600">RELAY:</span>
					<span class="w-1/2 text-lg font-bold">
						@* @if (Model.IMEI_Master_s.Status == "1")
						{
						}
						else
						{
							<span class="text-red-500">NC</span>
						} *@
							@if (Model.visLive_s.P10 == 1)
							{
								<span class="text-green-500">ON</span>
							}
							else
							{
								<span class="text-red-500">OFF</span>
							}
					</span>
				</div>
				<div class="flex justify-between">
					<span class="w-1/2 font-semibold text-gray-600">MCB STATUS:</span>
					<span class="w-1/2 text-lg font-bold">
						@if (Model.visLive_s.P10 == 1 && Model.visLive_s.P11 == 0 && Model.visLive_s.P3 == 0)
						{
							<span class="text-red-500">TRIP</span>
						}
						else
						{
							<span class="text-green-500">OK</span>
						}
					</span>
				</div>
				<div class="flex justify-between">
					<span class="w-1/2 font-semibold text-gray-600">DOOR STATUS:</span>
					<span class="w-1/2 text-lg font-bold text-gray-800">@(Model.visLive_s.P12 == 1 ? "OPEN" : "CLOSE")</span>
				</div>
				<div class="flex justify-between">
					<span class="w-1/2 font-semibold text-gray-600">RTC TIME:</span>
					<span class="w-1/2 text-lg font-bold text-gray-800">@(Model.visLive_s.P21)-@(Model.visLive_s.P22)-@(Model.visLive_s.P23) @(Model.visLive_s.P24):@(Model.visLive_s.P25):@(Model.visLive_s.P26)</span>
				</div>
				<div class="flex justify-between">
					<span class="w-1/2 font-semibold text-gray-600">SIGNAL STRENGTH:</span>
					<span class="w-1/2 text-lg font-bold text-gray-800">@(Model.visLive_s.P30)</span>
				</div>
				<div class="flex justify-between">
					<span class="w-1/2 font-semibold text-gray-600">LIGHTS COUNT:</span>
					<span class="w-1/2 text-lg font-bold text-gray-800">@(Model.IMEI_Master_s.NoOfStreetlight)</span>
				</div>
			</div>
		</div>
	</div>
</div>
<!-- Success Popup -->
<div id="successPopup" class="popup -translate-x-1/2 -translate-y-1/2 fixed left-1/2 top-1/2 z-50 hidden transform rounded-lg border border-green-300 bg-green-50 p-6 text-center shadow-xl">
	<div class="animate-bounce text-5xl text-green-500">✔</div>
	<div class="mt-4 text-xl font-semibold text-green-800">Command Executed</div>
	<div class="mt-2 text-sm text-green-600">Your command has been successfully executed!</div>
</div>

<!-- Error Popup -->
<div id="errorPopup" class="popup -translate-x-1/2 -translate-y-1/2 fixed left-1/2 top-1/2 z-50 hidden transform rounded-lg border border-red-300 bg-red-50 p-6 text-center shadow-xl">
	<div class="animate-shake text-5xl text-red-500">❌</div>
	<div class="mt-4 text-xl font-semibold text-red-800">Command Not Executed</div>
	<div class="mt-2 text-sm text-red-600">There was an issue executing your command. Please try again!</div>
</div>

@{
	var token = Context.Request.Cookies["Token"];
	var loader = ViewBag.loader;
}
<script>
	function getCookieValue(cookieName) {
		const cookies = document.cookie.split("; ");
		for (let cookie of cookies) {
			const [name, value] = cookie.split("=");
			if (name === cookieName) {
				return value;
			}
		}
		return null; // Return null if the cookie is not found
	}

	document.getElementById("lat-long").addEventListener("click", function () {
	  const destination = "@Model.IMEI_Master_s.Latitude, @Model.IMEI_Master_s.Longitude"; // Latitude and Longitude from your image.

	  // Get the user's current location.
	  if (navigator.geolocation) {
		navigator.geolocation.getCurrentPosition(
		  (position) => {
			const userLat = position.coords.latitude;
			const userLong = position.coords.longitude;

			// Construct the Google Maps URL.
			const googleMapsUrl = `https://www.google.com/maps/dir/${userLat},${userLong}/${destination}`;

			// Open the URL in a new tab.
			window.open(googleMapsUrl, "_blank");
		  },
		  (error) => {
			alert("Error getting your location: " + error.message);
		  }
		);
	  } else {
		alert("Geolocation is not supported by your browser.");
	  }
	});

	function showSuccessPopup() {
			// Hide error popup first (in case it is shown)
			document.getElementById('errorPopup').classList.remove('show');
			// Show success popup
			document.getElementById('successPopup').classList.add('show');
			// Hide the popup after 3 seconds
			setTimeout(() => {
				document.getElementById('successPopup').classList.remove('show');
			}, 3000);
	}

		function showErrorPopup() {
			// Hide success popup first (in case it is shown)
			document.getElementById('successPopup').classList.remove('show');
			// Show error popup
			document.getElementById('errorPopup').classList.add('show');
			// Hide the popup after 3 seconds
			setTimeout(() => {
				document.getElementById('errorPopup').classList.remove('show');
			}, 3000);
		}

	const btnOn = document.getElementById('btn-on');
	const btnOff = document.getElementById('btn-off');
	const btnReset = document.getElementById('btn-reset');

	let token = "@token";
	if (token) {
		const decoded = jwt_decode(token);

		// Extract username and role
		const username = decoded["http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name"];
		const userRole = decoded["http://schemas.microsoft.com/ws/2008/06/identity/claims/role"];

		console.log(username + userRole)

		if(userRole == "Officer" || userRole == "Visio") {
			btnOn.classList.remove('hidden');
			btnOff.classList.remove('hidden');
			btnReset.classList.remove('hidden');
		}
	}

	function reloadPage() {
		location.reload(); // Reloads the current page
	}

	var updateResponse10 = async (IMEI_no, value) => {
		async function checkP10ValueByIMEI(IMEI_no, intervalId) {
			try {
				if (@Model.visLive_s.P10 == 1) {
					// btnOn.disabled = true;
					btnOn.classList.add('bg-green-300');
					btnOn.classList.remove('bg-purple-200', 'hover:bg-purple-400');
					console.log("Model.visLive_s.P10 is ", @Model.visLive_s.P10);

					btnOff.disabled = false;
					btnOff.classList.add('hover:bg-purple-400');
					btnOff.classList.remove('bg-red-300');
					clearInterval(intervalId)
				} else {
					console.log(`P10 is not 3 for IMEI: ${IMEI_no}. Current value:`);
				}
			} catch (error) {
				console.error("Error checking P10 value:", error);
			}
		}

		const intervalId = setInterval(function () {
			checkP10ValueByIMEI(IMEI_no, intervalId);
			}, 1000); // Call every 1 second
		}

		var updateStatus = async (responseSts, IMEI_no) => {
			try {
				let duration = @(loader * 1000);
				console.log(duration + "updateStatus")
				showLoader();
				const response = await fetch(`/Home/UpdateIMEIStatus`, {
					method: 'POST', // Use POST method to send data in the body
					headers: {
						'Content-Type': 'application/json',
					},
					body: JSON.stringify({
						IMEI_no: IMEI_no,
						ResponseSts: responseSts,
					}),
				});
				console.log(IMEI_no, responseSts)

				// Check if the response is successful
				if (!response.ok) {
					throw new Error(`Failed to fetch wards: ${response.statusText}`);
				}

				// Parse the JSON response
				const data = await response.json();

				if (data.success) {
					console.log("response:", data.data.response)

					if (data.data.response == 9991) {
						let intervalId;
						let isIntervalCleared = false; // Flag to track whether interval was cleared

						try {
							// Start the interval
							intervalId = setInterval(async function () {
								try {
									const response = await fetch(`/Home/CheckP10ByIMEI`, {
										method: 'POST',
										headers: { 'Content-Type': 'application/json' },
										body: JSON.stringify({ IMEI_no }),
									});

									const data = await response.json();
									console.log(data);

									if (data.p10 === 1) {
										clearInterval(intervalId);
										isIntervalCleared = true; // Set the flag to true
										hideLoader();
										showSuccessPopup();
									} else {
										console.log(`P10 is not valid for IMEI: ${IMEI_no}`);
									}
								} catch (error) {
									console.error("Error in interval:", error);
								}
							}, 5000);

							// Stop the interval after the given duration
							setTimeout(() => {
								if (!isIntervalCleared) {
									// Only execute if the interval wasn't already cleared
									clearInterval(intervalId); // Ensure the interval is stopped
									hideLoader();
									showErrorPopup();
								}
							}, duration);
						} catch (error) {
							console.error("Error:", error);
						}
					} else if (data.data.response == 9992) {
						let intervalId;
						let isIntervalCleared = false; // Flag to track whether interval was cleared

						try {
							// Start the interval
							intervalId = setInterval(async function () {
								try {
									const response = await fetch(`/Home/CheckP10ByIMEI`, {
										method: 'POST',
										headers: { 'Content-Type': 'application/json' },
										body: JSON.stringify({ IMEI_no }),
									});

									const data = await response.json();
									console.log(data);

									if (data.p10 === 0) {
										clearInterval(intervalId);
										isIntervalCleared = true; // Set the flag to true
										hideLoader();
										showSuccessPopup();
									} else {
										console.log(`P10 is not valid for IMEI: ${IMEI_no}`);
									}
								} catch (error) {
									console.error("Error in interval:", error);
								}
							}, 5000);

							// Stop the interval after the given duration
							setTimeout(() => {
								if (!isIntervalCleared) {
									// Only execute if the interval wasn't already cleared
									clearInterval(intervalId); // Ensure the interval is stopped
									hideLoader();
									showErrorPopup();
								}
							}, duration);
						} catch (error) {
							console.error("Error:", error);
						}
					} else {
						// btnOn.disabled = true;
						btnOn.classList.add('bg-gray-300');
						btnOn.classList.remove('bg-purple-200', 'hover:bg-purple-400');

						// btnOff.disabled = true;
						btnOff.classList.add('bg-gray-300');
						btnOff.classList.remove('bg-purple-200', 'hover:bg-purple-400');

						btnReset.classList.add('bg-green-300');
						btnReset.classList.remove('bg-purple-200', 'hover:bg-purple-400');
					}
				} else {
					alert(data.message)
				}
			} catch (err) {
				console.log(err)
			}
		}

		let getLiveReport = (UID) => {
			try {
				console.log(UID);
				const url = `/Report/GetLiveReportByUID?UID=${UID}`;

				window.location.href = url;
			} catch (err) {
				console.log(err)
			}
		};

		let getDayReport = (UID) => {
			try {
				console.log(UID);
				const url = `/Report/GetDayReportByUID?UID=${UID}`;

				window.location.href = url;
			} catch (err) {
				console.log(err)
			}
		}

		$(document).ready(function () {
			const statusImg = document.getElementById('statusImg');
			if (@Model.IMEI_Master_s.Status == 1) {
				$('#statusImg').empty();

				$('#statusImg').append(
					`<img class="w-12" src="/images/wifigreenR.png" alt="wifi image" />`
				);
			} else {
				$('#statusImg').empty();

				$('#statusImg').append(
					`<img class="w-12" src="/images/wifiNR.png" alt="wifi image" />`
				);
			}

			if (@Model.visLive_s.P10 == 1) {
				// btnOn.disabled = true;
				btnOn.classList.add('bg-green-300');
				btnOn.classList.remove('bg-purple-200', 'hover:bg-purple-400');
				console.log("Model.visLive_s.P10 is ", @Model.visLive_s.P10);
			} else {
				// btnOff.disabled = true;
				btnOff.classList.add('bg-red-300');
				btnOff.classList.remove('bg-purple-200', 'hover:bg-purple-400');
				console.log("Model.visLive_s.P10 is ", @Model.visLive_s.P10);
			}


			let isP11 = @(Model.visLive_s?.P11 ?? 0);
			if (isP11 == 1) {
				console.log("Model.visLive_s.P11 is 1", isP11);
				btnOn.disabled = true;
				btnOff.disabled = true;
				btnReset.disabled = true;

				btnOn.classList.remove('bg-purple-200', 'hover:bg-purple-400', 'border-2');
				btnOff.classList.remove('bg-purple-200', 'hover:bg-purple-400', 'border-2');
				btnReset.classList.remove('bg-purple-200', 'hover:bg-purple-400', 'border-2');
			}
			console.log("Model.visLive_s.P11", isP11);
		})
</script>
